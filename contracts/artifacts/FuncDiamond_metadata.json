{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "DiamondWritable__InvalidInitializationParameters",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DiamondWritable__RemoveTargetNotZeroAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DiamondWritable__ReplaceTargetIsIdentical",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DiamondWritable__SelectorAlreadyAdded",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DiamondWritable__SelectorIsImmutable",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DiamondWritable__SelectorNotFound",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DiamondWritable__SelectorNotSpecified",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DiamondWritable__TargetHasNoCode",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ERC165Base__InvalidInterfaceId",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "Ownable__NotOwner",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "Ownable__NotTransitiveOwner",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "Proxy__ImplementationIsNotContract",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "SafeOwnable__NotNomineeOwner",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "target",
								"type": "address"
							},
							{
								"internalType": "enum IDiamondWritableInternal.FacetCutAction",
								"name": "action",
								"type": "uint8"
							},
							{
								"internalType": "bytes4[]",
								"name": "selectors",
								"type": "bytes4[]"
							}
						],
						"indexed": false,
						"internalType": "struct IDiamondWritableInternal.FacetCut[]",
						"name": "facetCuts",
						"type": "tuple[]"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "target",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "DiamondCut",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "acceptOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "target",
								"type": "address"
							},
							{
								"internalType": "enum IDiamondWritableInternal.FacetCutAction",
								"name": "action",
								"type": "uint8"
							},
							{
								"internalType": "bytes4[]",
								"name": "selectors",
								"type": "bytes4[]"
							}
						],
						"internalType": "struct IDiamondWritableInternal.FacetCut[]",
						"name": "facetCuts",
						"type": "tuple[]"
					},
					{
						"internalType": "address",
						"name": "target",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "diamondCut",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "selector",
						"type": "bytes4"
					}
				],
				"name": "facetAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "facet",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "facetAddresses",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "addresses",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "facet",
						"type": "address"
					}
				],
				"name": "facetFunctionSelectors",
				"outputs": [
					{
						"internalType": "bytes4[]",
						"name": "selectors",
						"type": "bytes4[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "facets",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "target",
								"type": "address"
							},
							{
								"internalType": "bytes4[]",
								"name": "selectors",
								"type": "bytes4[]"
							}
						],
						"internalType": "struct IDiamondReadable.Facet[]",
						"name": "diamondFacets",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFallbackAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "fallbackAddress",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nomineeOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "fallbackAddress",
						"type": "address"
					}
				],
				"name": "setFallbackAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
					"params": {
						"data": "optional initialization function call data",
						"facetCuts": "array of structured Diamond facet update data",
						"target": "optional target of initialization delegatecall"
					}
				},
				"facetAddress(bytes4)": {
					"params": {
						"selector": "function selector to query"
					},
					"returns": {
						"facet": "facet address (zero address if not found)"
					}
				},
				"facetAddresses()": {
					"returns": {
						"addresses": "array of facet addresses"
					}
				},
				"facetFunctionSelectors(address)": {
					"params": {
						"facet": "address of facet to query"
					},
					"returns": {
						"selectors": "array of function selectors"
					}
				},
				"facets()": {
					"returns": {
						"diamondFacets": "array of structured facet data"
					}
				},
				"getFallbackAddress()": {
					"returns": {
						"fallbackAddress": "address of fallback implementation"
					}
				},
				"owner()": {
					"returns": {
						"_0": "contract owner"
					}
				},
				"setFallbackAddress(address)": {
					"params": {
						"fallbackAddress": "address of fallback implementation"
					}
				},
				"supportsInterface(bytes4)": {
					"params": {
						"interfaceId": "interface id"
					},
					"returns": {
						"_0": "bool whether interface is supported"
					}
				},
				"transferOwnership(address)": {
					"params": {
						"account": "address of new owner"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"acceptOwnership()": {
					"notice": "accept transfer of contract ownership"
				},
				"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
					"notice": "update diamond facets and optionally execute arbitrary initialization function"
				},
				"facetAddress(bytes4)": {
					"notice": "get the address of the facet associated with given selector"
				},
				"facetAddresses()": {
					"notice": "get addresses of all facets used by diamond"
				},
				"facetFunctionSelectors(address)": {
					"notice": "get all selectors for given facet address"
				},
				"facets()": {
					"notice": "get all facets and their selectors"
				},
				"getFallbackAddress()": {
					"notice": "query the address of the fallback implementation"
				},
				"nomineeOwner()": {
					"notice": "get the nominated owner who has permission to call acceptOwnership"
				},
				"owner()": {
					"notice": "get the ERC173 contract owner"
				},
				"setFallbackAddress(address)": {
					"notice": "set the address of the fallback implementation"
				},
				"supportsInterface(bytes4)": {
					"notice": "query whether contract has registered support for given interface"
				},
				"transferOwnership(address)": {
					"notice": "transfer contract ownership to new account"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/FuncDiamond.sol": "FuncDiamond"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@solidstate/contracts/access/ownable/IOwnable.sol": {
			"keccak256": "0xee77272fcf35108e2103ebb4f5d68d46844c447d9d2e411f8f9136298ae1bc2c",
			"license": "MIT",
			"urls": [
				"bzz-raw://fef49f85af45dbadb55c259528e33fb91ecd74942305c101ee33120211b6dc0d",
				"dweb:/ipfs/QmVRVH7aWFQrSqWvku3E9LQAEar9L7bmxXrPoXLCpZDkLb"
			]
		},
		"@solidstate/contracts/access/ownable/IOwnableInternal.sol": {
			"keccak256": "0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60",
			"license": "MIT",
			"urls": [
				"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3",
				"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y"
			]
		},
		"@solidstate/contracts/access/ownable/ISafeOwnable.sol": {
			"keccak256": "0xfb9a7920498ab2bb3d493c292c40223eb3a6631431ea381ca39274b165c60102",
			"license": "MIT",
			"urls": [
				"bzz-raw://d720242e56f4aedf2975f4deba5ff4a177668d3b8c9c40c1a240a17a2f8a7c38",
				"dweb:/ipfs/QmfCcZ4ACMDULUjmPcrUNUY88i17pHYEkDFpxyKCcHsUP3"
			]
		},
		"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol": {
			"keccak256": "0xd5d44576a2f82b4ffdcf29feec6043e82436011784d92567a968609aa49a0f6b",
			"license": "MIT",
			"urls": [
				"bzz-raw://43961ad59d89c044a403ebb3fdd8c9be9b01a59d5e549ef205423725dcfb9889",
				"dweb:/ipfs/QmeatkxGznGMCHXAz2CHTTSbk5HjUXzrjEtMc8CppNxnTZ"
			]
		},
		"@solidstate/contracts/access/ownable/Ownable.sol": {
			"keccak256": "0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f",
			"license": "MIT",
			"urls": [
				"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc",
				"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79"
			]
		},
		"@solidstate/contracts/access/ownable/OwnableInternal.sol": {
			"keccak256": "0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9",
			"license": "MIT",
			"urls": [
				"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52",
				"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF"
			]
		},
		"@solidstate/contracts/access/ownable/OwnableStorage.sol": {
			"keccak256": "0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73",
			"license": "MIT",
			"urls": [
				"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995",
				"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM"
			]
		},
		"@solidstate/contracts/access/ownable/SafeOwnable.sol": {
			"keccak256": "0x84d5694ad1f6cc77170ec667b02080dca1ccdde26eddaf46960d95971df1a5f1",
			"license": "MIT",
			"urls": [
				"bzz-raw://cd6b07d586dd3365884d48fb0dde9a46d03b4d5ee7508b1c817e261820bf29b9",
				"dweb:/ipfs/QmUwnEW2oK91S54MosgKk4YA44qhruMSFeGB6yLP58xByZ"
			]
		},
		"@solidstate/contracts/access/ownable/SafeOwnableInternal.sol": {
			"keccak256": "0x1ab5cbb63b897d2bef48d4437ef9519fc15cd49ed976539c1d0fd262f087786f",
			"license": "MIT",
			"urls": [
				"bzz-raw://e348b34065e6297fc7485f52d4671add3abc4c4329c9c907c30f315d91c80dd0",
				"dweb:/ipfs/Qmc7dvy2roTkJyi6G51Aoay8Mai7hGxBSBWHeXWSDwA9dL"
			]
		},
		"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol": {
			"keccak256": "0x4818afb0b39e0770f881cbeaea1b1c77fba0daaa64bd8c1361d6e3a197628e93",
			"license": "MIT",
			"urls": [
				"bzz-raw://db4cb17939eb9bf2d1ae1d8aec3c95495991a75b760a3ff211fb485ac4aeb1cb",
				"dweb:/ipfs/Qme93NCwDTb7B6MYCxLedZreEAjpEe9NCQFpPLsaT823jq"
			]
		},
		"@solidstate/contracts/interfaces/IERC165.sol": {
			"keccak256": "0xc250e493770feaa0da8e5a55d241712c1c6526caa7d8df2455c3e5fa25124c0b",
			"license": "MIT",
			"urls": [
				"bzz-raw://768e47d9ddeb15daeab0c8c1109ae43a4c2a0633bd9e4bf141488dfc9252f7ba",
				"dweb:/ipfs/QmWMTTRTncar9LptrxU7WK7WG5hHp8KsYnBGfm3cYowuP8"
			]
		},
		"@solidstate/contracts/interfaces/IERC165Internal.sol": {
			"keccak256": "0xf4d4708a60ed04887849509a258db49d4eb686f33214cb9c9643325cd8dae89d",
			"license": "MIT",
			"urls": [
				"bzz-raw://66e7ade64c12edf7adbc0f20c1195b3c635ea2df67b836215441a4fe22ae17da",
				"dweb:/ipfs/QmUAbU31ZYg3FrKzXCk8CE1FbCg6LNoB5HpR4pU2QwZc7p"
			]
		},
		"@solidstate/contracts/interfaces/IERC173.sol": {
			"keccak256": "0xf1c1fbf0ec82110c29d549db1fbd8ec728ba0b995dc5f087e0a5464243135dce",
			"license": "MIT",
			"urls": [
				"bzz-raw://16c7f3eba0547576833d0c1fddb7ec34aeba4f28b4ce9e878c3bd3ebc9c8d3d1",
				"dweb:/ipfs/Qme79eYLo7dinnhotgC4bvYnCg4doBDShHeCajrf5zpAUF"
			]
		},
		"@solidstate/contracts/interfaces/IERC173Internal.sol": {
			"keccak256": "0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89",
			"license": "MIT",
			"urls": [
				"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75",
				"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx"
			]
		},
		"@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol": {
			"keccak256": "0x3f2268856fdd9b27946adc65010bc83992069a90034bf692ab630802a926a9c2",
			"license": "MIT",
			"urls": [
				"bzz-raw://c8f4aa0a9d369054fa3241abbf4a937eff32e42f7984ec2c11efe84b3536bdfd",
				"dweb:/ipfs/QmdL9cjvBLa5yszgCdxsqoh5BMYj6tJ2YWKPfLcRSzkA9c"
			]
		},
		"@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol": {
			"keccak256": "0xad163d89454d9c8a018880253c5be156ee0f847f05a392a12b2a7061c7fa8682",
			"license": "MIT",
			"urls": [
				"bzz-raw://f76be2455986e64dd5108360e42087c7f5d87552d60a256ff616d3258c01fa7d",
				"dweb:/ipfs/QmZEYtAya7yeZQ6BWBUYeCetm5Wem3vaxiq3mdx4DLLtUJ"
			]
		},
		"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol": {
			"keccak256": "0xfd1cfba40f8aabda5898ffe21adeeea8c7011da12bfdad7f7aa0cf87b3635653",
			"license": "MIT",
			"urls": [
				"bzz-raw://6b80596a94faae265ecd9e03875ccebf5c1e45d94d8119dcf04e3a1cd92f5fb6",
				"dweb:/ipfs/QmVK8xje6PeEwVoZfFcugAdy43kLx59D9UHr4m8Qu9GgV9"
			]
		},
		"@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol": {
			"keccak256": "0x288c50013c735cf30be90eb084589fc54bc0ee77a88ec69c3cc1efb11d7dccf4",
			"license": "MIT",
			"urls": [
				"bzz-raw://857c5836ad7808d13a87afa482af6ef2adbb26616767b2dd558b33ccb9569a28",
				"dweb:/ipfs/QmdptfxicGQUfsXFHpTW1y8NDV6k6oCuk5r9UqgGuv49Tk"
			]
		},
		"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol": {
			"keccak256": "0xccda4b118c8c09c276a0e577168aa404ea6207aad6b384b04f5f3a8923316422",
			"license": "MIT",
			"urls": [
				"bzz-raw://dcbafa161920a2a39ac001c76ee166ae4b345bef3ee6a0c5ca505504c0e9c052",
				"dweb:/ipfs/QmTF3DPJQPLsiYTmGNZXGBkmVRs14g2bUb1QJDH4ywwMq5"
			]
		},
		"@solidstate/contracts/proxy/IProxy.sol": {
			"keccak256": "0x2a06657ce005059e60a0765fe090240732d910fc38de43ca8fd48804bb86c5e4",
			"license": "MIT",
			"urls": [
				"bzz-raw://f893e1d80c28099c028560f96fdbc77fb28c5f3a5d30197e8274a130aa50c20b",
				"dweb:/ipfs/QmQ2WReybvHmivdwmSdZa4G3sCPJnJ4Ars9fYvb1byUPrw"
			]
		},
		"@solidstate/contracts/proxy/Proxy.sol": {
			"keccak256": "0x4d6ba63d71b8cddb57746d564cc904931d1ee479052a19f902787417ee5d97a8",
			"license": "MIT",
			"urls": [
				"bzz-raw://a13877552ba5a5678585fddd45ead718e195454a65b525a9fa21bc8bc6b1d317",
				"dweb:/ipfs/QmQ2jbrRE2JJKYo9baXvhU17X4URkYYPSXUud62UpDZn2k"
			]
		},
		"@solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol": {
			"keccak256": "0x541fe148acc6b9331149498d6f66308761a650da10c9bd8f9e933bdfec52f730",
			"license": "MIT",
			"urls": [
				"bzz-raw://ca4739de22c9d58ff72fbd29c5a9a3072eb0ede8fc66a4f9345ba25f6d1e80cc",
				"dweb:/ipfs/Qmbo93KbYF1K7pUpjZKkUP2ABLhayyLAzVs9AnZ9vwZHUA"
			]
		},
		"@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol": {
			"keccak256": "0xaa948c0ce846c4d4cec638b1b12580217b4782bbd1b25274d89bce5e2df14713",
			"license": "MIT",
			"urls": [
				"bzz-raw://b6994f606378439530c8a902f448c3dd0d47a0592aa52a859d4344e9ebe6c7a4",
				"dweb:/ipfs/QmRbYWfMyVKEvNJNkwgrHGQd9tWmznhUrPaUzvW7vsv2iw"
			]
		},
		"@solidstate/contracts/proxy/diamond/base/DiamondBase.sol": {
			"keccak256": "0x6712d6c7bee937ac07ee00eeaa30895634fbd3cda7f5b5c179a2331ad05623df",
			"license": "MIT",
			"urls": [
				"bzz-raw://c659c518ba877963adad6693287acdc9cc579603290df9ccf3d0c2a93af955e1",
				"dweb:/ipfs/QmPx59k37388TGXDT6EA2VZzBRWJQiT5F6H7Qt3cnPpQ3M"
			]
		},
		"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol": {
			"keccak256": "0x74365666c0e9917d742bbab21e174dea6bc6ccf6146153e43dd9d9fe8417a36a",
			"license": "MIT",
			"urls": [
				"bzz-raw://0328f0cee62d871c2ff5696384e213941623cd7d85e932205396c01416ceb77f",
				"dweb:/ipfs/QmR46DxncG2WVjxSBPAHziv2yXEknwm5tTHkd2nkv9neJD"
			]
		},
		"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol": {
			"keccak256": "0x3329852027ffb50519a245376a1dee8f828223c0fa439bbb16a80a1bc226c2fa",
			"license": "MIT",
			"urls": [
				"bzz-raw://4343964d070386d12d9e663607ad96e5134d4edd12234cb6412911ba77bcc5a9",
				"dweb:/ipfs/Qmbhp7gZRWRdryatZbjbgcxT4aWy9siaLWDXNoB1oCRWis"
			]
		},
		"@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol": {
			"keccak256": "0x12dccd7f0e714012ac5e2746ea9c74c0eb990efab580ff45e1e3eef268b3fe54",
			"license": "MIT",
			"urls": [
				"bzz-raw://b613f5140cae84540193a276a94e1b9959be2b51a57c3db5ea83ae8d16cc0f64",
				"dweb:/ipfs/QmPbbckwcC84kt6237L5829cXAcqvVfR91QLV684yfT9gk"
			]
		},
		"@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol": {
			"keccak256": "0x1b52280562511510101b03ea1c73d64645770582ba72aad8bb1633ccc8ae6d42",
			"license": "MIT",
			"urls": [
				"bzz-raw://730e215de2e4fd1e401716d4bdf1c4a3d6c5c9bdce9b8000a18fa3b48a69857d",
				"dweb:/ipfs/QmPyC5QYjLBZikRwYUTxENz3nX26KDUKSsCvhvg5wbAv6r"
			]
		},
		"@solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol": {
			"keccak256": "0x03fd06c9bd8642a42ece1d9f75c9e99869a06f4310fa9fe80df924ff68984036",
			"license": "MIT",
			"urls": [
				"bzz-raw://a5f13b8c513694b11a7aca91cfb4e7cc0f025360c49f4ab5cdb7451a460bef38",
				"dweb:/ipfs/QmPpzhGud3ujg8tPygdMggpVzKThF7T9uVz5uuVJ9Yvp35"
			]
		},
		"@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol": {
			"keccak256": "0xe3536079514a210e74f6e93b62525d451ed75c50c82773f9574c24e886ebe1ed",
			"license": "MIT",
			"urls": [
				"bzz-raw://f815154b93cf0619d01f779f0b7b88e2bae701adb1f92a36bbe6132e5321b656",
				"dweb:/ipfs/QmYhYKEuVEEHD2hc5P1iegppfNHMUAvdqsA22RS1Nh16wr"
			]
		},
		"@solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol": {
			"keccak256": "0xf481debe21720da2aa6a26492a57469b3592da44867935bc432f9ac8ffcdddd2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6b08ae74d3adc1415a0c1d34fd78b1b7bfdcf91c3b40123822cf33b28fe9f2aa",
				"dweb:/ipfs/Qmad6tp6wV3dKbqi2Mmaw4U89SvkXUEZ3EnD2NbQSwer5Y"
			]
		},
		"@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol": {
			"keccak256": "0x741bbca02cacee6dab8dac18416f58200d75675600d7f6db7813e8385c4719e3",
			"license": "MIT",
			"urls": [
				"bzz-raw://ace0e6809a0b134b9697cbec3e2e3630828ff0b58c29cd0779eb50527c3b804d",
				"dweb:/ipfs/QmUvLY1kL8oAgCD7rQciRpq4mmKAANkzrtvPJo3m56e3BS"
			]
		},
		"@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol": {
			"keccak256": "0x3d7dd0fa5d4cef8889d507880fe68d0b1558f6c21c5855170c44ef7e2b05bcef",
			"license": "MIT",
			"urls": [
				"bzz-raw://641081382a63beee3cae8b0f40b3146710f5377a964843160bf79921815e528c",
				"dweb:/ipfs/QmfWcAeDRtcvnCTnv3PE7er7WD73n9ct1YvrmxYDQFt9wP"
			]
		},
		"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol": {
			"keccak256": "0x82e0eeb28c8b8bd1ee9c5dd3247fa3d4062d5c6d43061833714c88741ecb5605",
			"license": "MIT",
			"urls": [
				"bzz-raw://4488dbd8056f270930da3ecae6f42037274fcac0444cacc25a57153541acb740",
				"dweb:/ipfs/QmURtgVddgar1YecAXZDEDStGaX7tBZTmcuZQJkeiA9NzZ"
			]
		},
		"@solidstate/contracts/utils/AddressUtils.sol": {
			"keccak256": "0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf",
			"license": "MIT",
			"urls": [
				"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929",
				"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm"
			]
		},
		"@solidstate/contracts/utils/UintUtils.sol": {
			"keccak256": "0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8",
			"license": "MIT",
			"urls": [
				"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2",
				"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza"
			]
		},
		"contracts/FuncDiamond.sol": {
			"keccak256": "0x851157ebe3242394a0959552d46540f94a1ebe840ef6337e55596bcc37cd160b",
			"license": "Unlicensed",
			"urls": [
				"bzz-raw://cb773414de47859a56fa0afcbea8ca72f815b4c98c1bf298af79ad74d191c037",
				"dweb:/ipfs/QmdnBJvRfCvB8ZZYVhruwgwi8MxpoguXY9FPkt3mWAjC29"
			]
		}
	},
	"version": 1
}